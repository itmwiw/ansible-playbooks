---
# This playbook config add VM's floating Ips configuration.
# Apply only to the Master instance, as the role include a task that sync with the Backup.

- name: Get secrets from Hashicorp vault.
  hosts: localhost
  tasks:

    - name: Login to vault.
      community.hashi_vault.vault_login:
        url: "{{ vault.url }}"
        auth_method: "{{ vault.auth_method }}"
        mount_point: "{{ vault.auth_mount_point }}"
        jwt: "{{ vault.jwt }}"
        role_id: "{{ vault.role_id }}"
        validate_certs: "{{ vault.validate_certs }}"
      register: login_data

    - name: Retrieve infrastructure secrets.
      community.hashi_vault.vault_kv2_get:
        url: "{{ vault.url }}"
        auth_method: token
        token: '{{ login_data | community.hashi_vault.vault_login_token }}'
        engine_mount_point: "{{ vault.engine_mount_point }}"
        path: "{{ vault.secret_path }}"
        validate_certs: "{{ vault.validate_certs }}"
        token_validate: "false"
      register: infra_secret

    - name: Copy SSH private key - opnsense.
      ansible.builtin.copy:
        content: "{{ infra_secret.secret.opnsense_ssh }}"
        dest: "~/.ssh/opnsense"
        mode: "0600"

    - name: Copy SSH private key - cisco.
      copy:
        content: "{{ infra_secret.secret.cisco_ssh }}"
        dest: "~/.ssh/cisco"
        mode: "0600"

- name: Configure Opnsense.
  hosts: opnsenses
  roles:
    - floating-ip

- name: Configure Cisco switch.
  hosts: switches
  tasks:

    - name: Create Vlans.
      cisco.ios.ios_config:
        lines:
        - vlan {{ item.vlan }}
        - name {{ 'Vlan_' + item.vlan }}
      loop: "{{ floating_ips }}"
      when: floating_ips is defined

    - name: Configure Untagged Interfaces.
      cisco.ios.ios_l2_interfaces:
        config:
        - name: "{{ item.switch_interface }}"
          mode: access
          access:
            vlan: "{{ item.vlan }}"
        state: merged
      loop: "{{ floating_ips }}"
      when: floating_ips is defined

    - name: Configure tagged Interfaces.
      cisco.ios.ios_config:
        lines:
        - switchport mode trunk
        - switchport trunk allowed vlan "{{ '1,1002-1005,' + (floating_ips | map(attribute='vlan') | flatten | join(',')) }}"
        parents: "{{ 'interface ' + item }}"
      loop: "{{ switch_trunk_interfaces }}"
      when: switch_trunk_interfaces is defined

    - name: Save running to startup when modified.
      cisco.ios.ios_config:
        save_when: modified

---

- name: Virtualip settings - arp proxy mode.
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/virtualip/vip[interface/text()="{{ floating_ip_arp_proxy.interface }}" and subnet/text()="{{ floating_ip_arp_proxy.subnet }}"]/{{ item.key }}
    value: "{{ item.value }}"
    pretty_print: "{{ pretty_print }}"
  loop: "{{ floating_ip_arp_proxy | dict2items }}"

- name: Virtualip attribute uuid - arp proxy mode.
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/virtualip/vip[interface/text()="{{ floating_ip_arp_proxy.interface }}" and subnet/text()="{{ floating_ip_arp_proxy.subnet }}"]
    attribute: uuid
    value: "{{ (floating_ip.ip_address + '_arp_proxy') | to_uuid }}"
    pretty_print: "{{ pretty_print }}"

# Only if HA is enabled
- name: Virtualip settings - CARP.
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/virtualip/vip[interface/text()="{{ floating_ip_ha.vlan_carp.interface }}" and subnet/text()="{{ floating_ip_ha.vlan_carp.subnet }}"]/{{ item.key }}
    value: "{{ item.value }}"
    pretty_print: "{{ pretty_print }}"
  loop: "{{ floating_ip_ha.vlan_carp | dict2items }}"
  when: floating_ip_ha.enabled

- name: Virtualip attribute uuid - CARP.
  delegate_to: localhost
  community.general.xml:
    path: "{{ local_config_path }}"
    xpath: /opnsense/virtualip/vip[interface/text()="{{ floating_ip_ha.vlan_carp.interface }}" and subnet/text()="{{ floating_ip_ha.vlan_carp.subnet }}"]
    attribute: uuid
    value: "{{ (floating_ip.ip_address + '_carp') | to_uuid }}"
    pretty_print: "{{ pretty_print }}"
  when: floating_ip_ha.enabled

...
